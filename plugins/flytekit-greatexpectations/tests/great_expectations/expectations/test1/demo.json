{
  "data_asset_type": null,
  "expectation_suite_name": "test1.demo",
  "expectations": [
    {
      "expectation_type": "expect_table_columns_to_match_ordered_list",
      "kwargs": {
        "column_list": [
          "vendor_id",
          "pickup_datetime",
          "dropoff_datetime",
          "passenger_count",
          "trip_distance",
          "rate_code_id",
          "store_and_fwd_flag",
          "pickup_location_id",
          "dropoff_location_id",
          "payment_type",
          "fare_amount",
          "extra",
          "mta_tax",
          "tip_amount",
          "tolls_amount",
          "improvement_surcharge",
          "total_amount",
          "congestion_surcharge"
        ]
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_table_row_count_to_be_between",
      "kwargs": {
        "max_value": 10000,
        "min_value": 10000
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "store_and_fwd_flag",
        "value_set": [
          "N",
          "Y"
        ]
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "store_and_fwd_flag"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_proportion_of_unique_values_to_be_between",
      "kwargs": {
        "column": "store_and_fwd_flag",
        "max_value": 0.0002,
        "min_value": 0.0002
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_in_type_list",
      "kwargs": {
        "column": "store_and_fwd_flag",
        "type_list": [
          "CHAR",
          "VARCHAR",
          "NVARCHAR",
          "TEXT",
          "STRING",
          "StringType",
          "string",
          "str"
        ]
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "dropoff_location_id",
        "max_value": 1,
        "min_value": 1
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "dropoff_location_id",
        "max_value": 265,
        "min_value": 265
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "dropoff_location_id",
        "max_value": 162.2068,
        "min_value": 162.2068
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "dropoff_location_id",
        "max_value": 162.0,
        "min_value": 162.0
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": "lower",
        "column": "dropoff_location_id",
        "quantile_ranges": {
          "quantiles": [
            0.05,
            0.25,
            0.5,
            0.75,
            0.95
          ],
          "value_ranges": [
            [
              43,
              43
            ],
            [
              113,
              113
            ],
            [
              162,
              162
            ],
            [
              234,
              234
            ],
            [
              255,
              255
            ]
          ]
        }
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "dropoff_location_id",
        "value_set": [
          1,
          3,
          4,
          6,
          7,
          10,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          28,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          45,
          48,
          49,
          50,
          51,
          52,
          54,
          55,
          56,
          60,
          61,
          62,
          63,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          95,
          97,
          98,
          100,
          102,
          106,
          107,
          109,
          112,
          113,
          114,
          116,
          117,
          119,
          121,
          122,
          123,
          125,
          126,
          127,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          173,
          174,
          175,
          177,
          178,
          179,
          181,
          182,
          186,
          188,
          189,
          190,
          191,
          193,
          195,
          196,
          197,
          198,
          200,
          202,
          203,
          205,
          206,
          207,
          208,
          209,
          210,
          211,
          212,
          215,
          216,
          217,
          219,
          220,
          223,
          224,
          225,
          226,
          228,
          229,
          230,
          231,
          232,
          233,
          234,
          235,
          236,
          237,
          238,
          239,
          241,
          243,
          244,
          246,
          247,
          248,
          249,
          250,
          252,
          254,
          255,
          256,
          257,
          258,
          259,
          260,
          261,
          262,
          263,
          264,
          265
        ]
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "dropoff_location_id"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_proportion_of_unique_values_to_be_between",
      "kwargs": {
        "column": "dropoff_location_id",
        "max_value": 0.0205,
        "min_value": 0.0205
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_in_type_list",
      "kwargs": {
        "column": "dropoff_location_id",
        "type_list": [
          "INTEGER",
          "integer",
          "int",
          "int_",
          "int8",
          "int16",
          "int32",
          "int64",
          "uint8",
          "uint16",
          "uint32",
          "uint64",
          "INT",
          "TINYINT",
          "BYTEINT",
          "SMALLINT",
          "BIGINT",
          "IntegerType",
          "LongType",
          "DECIMAL"
        ]
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "tolls_amount",
        "max_value": 0.0,
        "min_value": 0.0
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "tolls_amount",
        "max_value": 500.05,
        "min_value": 500.05
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "tolls_amount",
        "max_value": 0.3793619999999999,
        "min_value": 0.3793619999999999
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "tolls_amount",
        "max_value": 0.0,
        "min_value": 0.0
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": "lower",
        "column": "tolls_amount",
        "quantile_ranges": {
          "quantiles": [
            0.05,
            0.25,
            0.5,
            0.75,
            0.95
          ],
          "value_ranges": [
            [
              0.0,
              0.0
            ],
            [
              0.0,
              0.0
            ],
            [
              0.0,
              0.0
            ],
            [
              0.0,
              0.0
            ],
            [
              5.76,
              5.76
            ]
          ]
        }
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_in_set",
      "kwargs": {
        "column": "tolls_amount",
        "value_set": [
          0.0,
          2.16,
          2.64,
          5.54,
          5.76,
          5.77,
          8.5,
          10.08,
          10.5,
          11.26,
          11.52,
          12.5,
          13.3,
          13.5,
          14.25,
          14.5,
          14.95,
          15.0,
          15.5,
          16.26,
          16.49,
          17.7,
          18.5,
          20.5,
          21.01,
          500.05
        ]
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "tolls_amount"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_proportion_of_unique_values_to_be_between",
      "kwargs": {
        "column": "tolls_amount",
        "max_value": 0.0026,
        "min_value": 0.0026
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_in_type_list",
      "kwargs": {
        "column": "tolls_amount",
        "type_list": [
          "FLOAT",
          "DOUBLE",
          "FLOAT4",
          "FLOAT8",
          "DOUBLE_PRECISION",
          "NUMERIC",
          "FloatType",
          "DoubleType",
          "float_",
          "float16",
          "float32",
          "float64",
          "number",
          "DECIMAL"
        ]
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_min_to_be_between",
      "kwargs": {
        "column": "total_amount",
        "max_value": -24.3,
        "min_value": -24.3
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_max_to_be_between",
      "kwargs": {
        "column": "total_amount",
        "max_value": 537.85,
        "min_value": 537.85
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_mean_to_be_between",
      "kwargs": {
        "column": "total_amount",
        "max_value": 18.49267,
        "min_value": 18.49267
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_median_to_be_between",
      "kwargs": {
        "column": "total_amount",
        "max_value": 14.3,
        "min_value": 14.3
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_quantile_values_to_be_between",
      "kwargs": {
        "allow_relative_error": "lower",
        "column": "total_amount",
        "quantile_ranges": {
          "quantiles": [
            0.05,
            0.25,
            0.5,
            0.75,
            0.95
          ],
          "value_ranges": [
            [
              7.8,
              7.8
            ],
            [
              11.15,
              11.15
            ],
            [
              14.3,
              14.3
            ],
            [
              19.56,
              19.56
            ],
            [
              48.36,
              48.36
            ]
          ]
        }
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_not_be_null",
      "kwargs": {
        "column": "total_amount"
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_proportion_of_unique_values_to_be_between",
      "kwargs": {
        "column": "total_amount",
        "max_value": 0.1016,
        "min_value": 0.1016
      },
      "meta": {}
    },
    {
      "expectation_type": "expect_column_values_to_be_in_type_list",
      "kwargs": {
        "column": "total_amount",
        "type_list": [
          "FLOAT",
          "DOUBLE",
          "FLOAT4",
          "FLOAT8",
          "DOUBLE_PRECISION",
          "NUMERIC",
          "FloatType",
          "DoubleType",
          "float_",
          "float16",
          "float32",
          "float64",
          "number",
          "DECIMAL"
        ]
      },
      "meta": {}
    }
  ],
  "meta": {
    "citations": [
      {
        "batch_definition": null,
        "batch_kwargs": null,
        "batch_markers": null,
        "batch_parameters": null,
        "batch_request": {
          "data_asset_name": "yellow_tripdata_sample_2019-02.csv",
          "data_connector_name": "data_example_data_connector",
          "datasource_name": "data",
          "limit": 1000
        },
        "batch_spec": null,
        "citation_date": "2021-06-10T07:07:24.729244Z",
        "comment": "Created suite added via CLI"
      }
    ],
    "great_expectations_version": "0.13.19"
  }
}
