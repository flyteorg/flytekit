name: Build

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        spark-version-suffix: ["", "-spark2"]
        exclude:
        - python-version: 3.8
          spark-version-suffix: "-spark2"
        - python-version: 3.9
          spark-version-suffix: "-spark2"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements files
        key: ${{ format('{0}-pip-{1}', runner.os, hashFiles('dev-requirements.txt', format('requirements{0}.txt', matrix.spark-version-suffix))) }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip==21.2.4 setuptools wheel
        make setup${{ matrix.spark-version-suffix }}
        pip freeze
    - name: Test with coverage
      run: |
        coverage run -m pytest tests/flytekit/unit tests/scripts
    - name: Integration Tests with coverage
      # https://github.com/actions/runner/issues/241#issuecomment-577360161
      shell: 'script -q -e -c "bash {0}"'
      run: |
        python -m pip install awscli
        coverage run --append -m pytest tests/flytekit/integration
    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true # optional (default = false)

  build-plugins:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        plugin-names:
          - flytekit-aws-athena
          - flytekit-aws-sagemaker
          - flytekit-data-fsspec
          - flytekit-dolt
          - flytekit-greatexpectations
          - flytekit-hive
          - flytekit-k8s-pod
          - flytekit-kf-pytorch
          - flytekit-kf-tensorflow
          - flytekit-papermill
          - flytekit-spark
          - flytekit-sqlalchemy
          - flytekit-pandera
          - flytekit-snowflake
          - flytekit-modin
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements files
        key: ${{ format('{0}-pip-{1}', runner.os, hashFiles('dev-requirements.txt', format('plugins/{0}/requirements.txt', matrix.plugin-names ))) }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip==21.2.4 setuptools wheel
        make setup
        cd plugins/${{ matrix.plugin-names }}
        pip install -e .
        pip install --no-deps -U https://github.com/flyteorg/flytekit/archive/${{ github.sha }}.zip#egg=flytekit
        pip freeze
    - name: Test with coverage
      run: |
        cd plugins/${{ matrix.plugin-names }}
        coverage run -m pytest tests

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch the code
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip==21.2.4
          pip install -r dev-requirements.txt
      - name: Lint
        run: |
          make lint
      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore:
            boilerplate

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch the code
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip==21.2.4 setuptools wheel
          pip install -r doc-requirements.txt
      - name: Build the documentation
        run: make -C docs html
